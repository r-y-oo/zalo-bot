from config import API_KEY, SECRET_KEY, IMEI, SESSION_COOKIES,PREFIX
from mitaizl import CommandHandler
from zlapi import ZaloAPI
from zlapi.models import Message
from modules.bot_info import *
from modules.welcome import welcome
from modules.startup_notify import notify_bot_startup
from colorama import Fore, Style, init
from modules.menu import get_mitaizl  # ƒê·∫£m b·∫£o ƒë√∫ng t√™n file ch·ª©a menuzl
import threading
import time
commands = get_mitaizl()


init(autoreset=True)

class Client(ZaloAPI):
    def __init__(self, api_key, secret_key, imei, session_cookies):
        super().__init__(api_key, secret_key, imei=imei, session_cookies=session_cookies)
        handle_bot_admin(self)
        self.version = 1.1
        self.me_name = "Bot by Duy Khanh"
        self.date_update = "26/9/2024"
        self.command_handler = CommandHandler(self)
        
        # G·ª≠i th√¥ng b√°o kh·ªüi ƒë·ªông sau khi init xong
        self.startup_notified = False
        
    def onEvent(self,event_data,event_type):
        welcome(self,event_data,event_type)
        
    def onMessage(self, mid, author_id, message, message_object, thread_id, thread_type):
        # G·ª≠i th√¥ng b√°o kh·ªüi ƒë·ªông l·∫ßn ƒë·∫ßu nh·∫≠n message (ƒë·∫£m b·∫£o bot ƒë√£ connect)
        if not self.startup_notified:
            self.startup_notified = True
            # Ch·∫°y trong thread ri√™ng ƒë·ªÉ kh√¥ng block message processing
            threading.Thread(target=self._send_startup_notification, daemon=True).start()
        
        print(f"{Fore.GREEN}{Style.BRIGHT}------------------------------\n"
              f"**Message Details:**\n"
              f"- **Message:** {Style.BRIGHT}{message} {Style.NORMAL}\n"
              f"- **Author ID:** {Fore.MAGENTA}{Style.BRIGHT}{author_id} {Style.NORMAL}\n"
              f"- **Thread ID:** {Fore.YELLOW}{Style.BRIGHT}{thread_id}{Style.NORMAL}\n"
              f"- **Thread Type:** {Fore.BLUE}{Style.BRIGHT}{thread_type}{Style.NORMAL}\n"
              f"- **Message Object:** {Fore.RED}{Style.BRIGHT}{message_object}{Style.NORMAL}\n"
              f"{Fore.GREEN}{Style.BRIGHT}------------------------------\n"
              )
        allowed_thread_ids = get_allowed_thread_ids()
        if thread_id in allowed_thread_ids and thread_type == ThreadType.GROUP and not is_admin(author_id):
            handle_check_profanity(self, author_id, thread_id, message_object, thread_type, message)
        try:
            if isinstance(message,str):
                
                self.command_handler.handle_command(message, author_id, message_object, thread_id, thread_type)
        except:
            pass

    def _send_startup_notification(self):
        """G·ª≠i th√¥ng b√°o kh·ªüi ƒë·ªông trong thread ri√™ng"""
        try:
            # ƒê·ª£i 2 gi√¢y ƒë·ªÉ ƒë·∫£m b·∫£o bot ƒë√£ ·ªïn ƒë·ªãnh
            time.sleep(2)
            notify_bot_startup(self)
        except Exception as e:
            print(f"‚ùå L·ªói g·ª≠i th√¥ng b√°o kh·ªüi ƒë·ªông: {e}")

    def force_startup_notification(self):
        """G·ª≠i th√¥ng b√°o kh·ªüi ƒë·ªông ngay l·∫≠p t·ª©c (d√πng cho testing)"""
        try:
            notify_bot_startup(self)
            self.startup_notified = True
            print("‚úÖ ƒê√£ g·ª≠i th√¥ng b√°o kh·ªüi ƒë·ªông th·ªß c√¥ng")
        except Exception as e:
            print(f"‚ùå L·ªói g·ª≠i th√¥ng b√°o kh·ªüi ƒë·ªông th·ªß c√¥ng: {e}")

def main():
    """H√†m main v·ªõi error handling"""
    try:
        print(f"{Fore.GREEN}{Style.BRIGHT}üöÄ ƒêang kh·ªüi ƒë·ªông bot...{Style.RESET_ALL}")
        client = Client(API_KEY, SECRET_KEY, IMEI, SESSION_COOKIES)
        
        print(f"{Fore.GREEN}{Style.BRIGHT}‚úÖ Bot ƒë√£ kh·ªüi t·∫°o th√†nh c√¥ng!{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}{Style.BRIGHT}üì° ƒêang k·∫øt n·ªëi v√† l·∫Øng nghe tin nh·∫Øn...{Style.RESET_ALL}")
        
        # C√≥ th·ªÉ g·ª≠i th√¥ng b√°o ngay khi kh·ªüi ƒë·ªông n·∫øu mu·ªën
        # client.force_startup_notification()
        
        client.listen(thread=True,delay=0)
        
    except KeyboardInterrupt:
        print(f"\n{Fore.YELLOW}{Style.BRIGHT}üõë Bot ƒëang t·∫Øt theo y√™u c·∫ßu ng∆∞·ªùi d√πng...{Style.RESET_ALL}")
        try:
            # G·ª≠i th√¥ng b√°o t·∫Øt bot n·∫øu c·∫ßn
            from modules.startup_notify import send_shutdown_notification
            send_shutdown_notification(client)
        except:
            pass
    except Exception as e:
        print(f"{Fore.RED}{Style.BRIGHT}‚ùå L·ªói kh·ªüi ƒë·ªông bot: {e}{Style.RESET_ALL}")
        
        # Th·ª≠ g·ª≠i th√¥ng b√°o l·ªói ƒë·∫øn admin
        try:
            from modules.startup_notify import send_startup_error
            send_startup_error(str(e))
        except:
            pass

if __name__ == "__main__":
    main()

import os
import time
import threading
from zlapi.models import MultiMsgStyle, MessageStyle, Message
from config import ADMIN

is_war_running = False

des = {
    'version': "1.0.2",
    'credits': "Kh√¥ng C·∫ßn Ai Bi·∫øt",
    'description': "G·ª≠i n·ªôi dung t·ª´ file ngonwar2.txt li√™n t·ª•c trong nh√≥m v·ªõi ch·ªØ c·ª±c l·ªõn v√† h√¨nh ·∫£nh."
}

def stop_war(client, message_object, thread_id, thread_type):
    global is_war_running
    is_war_running = False
    client.replyMessage(Message(text="‚õî **WAR CON C·∫∂C B·ªê M TESTüêß.**"), message_object, thread_id, thread_type)

def handle_war_command(message, message_object, thread_id, thread_type, author_id, client):
    global is_war_running

    if author_id not in ADMIN:
        client.replyMessage(
            Message(text="‚ö†Ô∏è B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y."),
            message_object, thread_id, thread_type
        )
        return

    command_parts = message.split()
    if len(command_parts) < 2:
        client.replyMessage(Message(text="‚ùó Vui l√≤ng ch·ªâ ƒë·ªãnh l·ªánh h·ª£p l·ªá (vd: treoanh on ho·∫∑c treoanh stop)."), message_object, thread_id, thread_type)
        return

    action = command_parts[1].lower()

    if action == "stop":
        if not is_war_running:
            client.replyMessage(
                Message(text="‚ö†Ô∏è **Hi·ªán t·∫°i kh√¥ng c√≥ n·ªôi dung n√†o ƒëang g·ª≠i.**"),
                message_object, thread_id, thread_type
            )
        else:
            stop_war(client, message_object, thread_id, thread_type)
        return

    if action != "on":
        client.replyMessage(Message(text="‚ùó Vui l√≤ng ch·ªâ ƒë·ªãnh l·ªánh 'on' ho·∫∑c 'stop'."), message_object, thread_id, thread_type)
        return

    try:
        with open("ngonwar2.txt", "r", encoding="utf-8") as file:
            Ngon = file.readlines()
    except FileNotFoundError:
        client.replyMessage(
            Message(text="‚ùó Kh√¥ng t√¨m th·∫•y file **ngonwar2.txt**."),
            message_object,
            thread_id,
            thread_type
        )
        return

    if not Ngon:
        client.replyMessage(
            Message(text="‚ùó File **ngonwar2.txt** kh√¥ng c√≥ n·ªôi dung n√†o ƒë·ªÉ g·ª≠i."),
            message_object,
            thread_id,
            thread_type
        )
        return

    is_war_running = True

    def war_loop():
        while is_war_running:
            for noidung in Ngon:
                if not is_war_running:
                    break
                # Chuy·ªÉn ƒë·ªïi n·ªôi dung th√†nh ch·ªØ to v√† n·ªïi b·∫≠t
                spam_text = f"üîäüîäüîä **{noidung.strip().upper()}** üîäüîäüîä"
                client.send(Message(text=spam_text), thread_id, thread_type)

                # G·ª≠i k√®m h√¨nh ·∫£nh
                try:
                    client.sendLocalImage(
                        "1.jpg",
                        thread_id=thread_id,
                        thread_type=thread_type,
                        message=Message(text="üì¢ **H√£y ch√∫ √Ω n·ªôi dung n√†y!**"),
                        ttl=120000
                    )
                except FileNotFoundError:
                    client.replyMessage(
                        Message(text="‚ùó Kh√¥ng t√¨m th·∫•y file ·∫£nh **3.jpg**."),
                        thread_id,
                        thread_type
                    )
                except Exception as e:
                    client.replyMessage(
                        Message(text=f"‚ö†Ô∏è L·ªói khi g·ª≠i h√¨nh ·∫£nh: {e}"),
                        thread_id,
                        thread_type
                    )

                time.sleep(3)  # Gi√£n c√°ch th·ªùi gian g·ª≠i

    war_thread = threading.Thread(target=war_loop)
    war_thread.start()

def get_mitaizl():
    return {
        'treoanh': handle_war_command
    }